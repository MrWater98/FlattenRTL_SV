// Generated by CIRCT firtool-1.61.0
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

// Standard header to adapt well known macros for prints and assertions.

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

module DCacheDataArray(
  input         clock,
                io_req_valid,	// src/main/scala/rocket/DCache.scala:42:14
  input  [13:0] io_req_bits_addr,	// src/main/scala/rocket/DCache.scala:42:14
  input         io_req_bits_write,	// src/main/scala/rocket/DCache.scala:42:14
  input  [31:0] io_req_bits_wdata,	// src/main/scala/rocket/DCache.scala:42:14
  input  [3:0]  io_req_bits_eccMask,	// src/main/scala/rocket/DCache.scala:42:14
  output [31:0] io_resp_0	// src/main/scala/rocket/DCache.scala:42:14
);

  wire        data_arrays_0_rdata_data_en;	// src/main/scala/rocket/DCache.scala:69:39
  wire        data_arrays_0_rdata_MPORT_en;	// src/main/scala/rocket/DCache.scala:64:17
  wire [31:0] _data_arrays_0_ext_RW0_rdata;	// src/main/scala/util/DescribedSRAM.scala:17:26
  wire [31:0] wWords_0 = io_req_bits_wdata;	// src/main/scala/util/package.scala:211:50
  wire        rdata_valid = io_req_valid;	// src/main/scala/rocket/DCache.scala:63:30
  wire        eccMask_0 = io_req_bits_eccMask[0];	// src/main/scala/rocket/DCache.scala:48:82
  wire        eccMask_1 = io_req_bits_eccMask[1];	// src/main/scala/rocket/DCache.scala:48:82
  wire        eccMask_2 = io_req_bits_eccMask[2];	// src/main/scala/rocket/DCache.scala:48:82
  wire        eccMask_3 = io_req_bits_eccMask[3];	// src/main/scala/rocket/DCache.scala:48:82
  wire [11:0] addr = io_req_bits_addr[13:2];	// src/main/scala/rocket/DCache.scala:51:31
  wire [7:0]  rdata_wData_0;	// src/main/scala/util/package.scala:211:50
  wire [7:0]  rdata_wData_1;	// src/main/scala/util/package.scala:211:50
  wire [7:0]  rdata_wData_2;	// src/main/scala/util/package.scala:211:50
  wire [7:0]  rdata_wData_3;	// src/main/scala/util/package.scala:211:50
  assign data_arrays_0_rdata_MPORT_en = rdata_valid & io_req_bits_write;	// src/main/scala/rocket/DCache.scala:63:30, :64:17
  assign rdata_wData_0 = wWords_0[7:0];	// src/main/scala/util/package.scala:211:50
  assign rdata_wData_1 = wWords_0[15:8];	// src/main/scala/util/package.scala:211:50
  assign rdata_wData_2 = wWords_0[23:16];	// src/main/scala/util/package.scala:211:50
  assign rdata_wData_3 = wWords_0[31:24];	// src/main/scala/util/package.scala:211:50
  assign data_arrays_0_rdata_data_en = rdata_valid & ~io_req_bits_write;	// src/main/scala/rocket/DCache.scala:63:30, :69:{39,42}
  wire [15:0] rdata_lo = _data_arrays_0_ext_RW0_rdata[15:0];	// src/main/scala/util/DescribedSRAM.scala:17:26, src/main/scala/util/package.scala:45:27
  wire [15:0] rdata_hi = _data_arrays_0_ext_RW0_rdata[31:16];	// src/main/scala/util/DescribedSRAM.scala:17:26, src/main/scala/util/package.scala:45:27
  wire [31:0] rdata_0_0 = {rdata_hi, rdata_lo};	// src/main/scala/util/package.scala:45:27
  data_arrays_0_4096x32 data_arrays_0_ext (	// src/main/scala/util/DescribedSRAM.scala:17:26
    .RW0_addr  (addr),	// src/main/scala/rocket/DCache.scala:51:31
    .RW0_en    (data_arrays_0_rdata_data_en | data_arrays_0_rdata_MPORT_en),	// src/main/scala/rocket/DCache.scala:64:17, :69:39, src/main/scala/util/DescribedSRAM.scala:17:26
    .RW0_clk   (clock),
    .RW0_wmode (io_req_bits_write),
    .RW0_wdata ({rdata_wData_3, rdata_wData_2, rdata_wData_1, rdata_wData_0}),	// src/main/scala/util/DescribedSRAM.scala:17:26, src/main/scala/util/package.scala:211:50
    .RW0_rdata (_data_arrays_0_ext_RW0_rdata),
    .RW0_wmask ({eccMask_3, eccMask_2, eccMask_1, eccMask_0})	// src/main/scala/rocket/DCache.scala:48:82, src/main/scala/util/DescribedSRAM.scala:17:26
  );
  assign io_resp_0 = rdata_0_0;	// src/main/scala/util/package.scala:45:27
endmodule

